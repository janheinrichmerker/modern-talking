name: CI

on:
  push:

jobs:
  build-latex-paper:
    name: "🏗️ Build LaTeX paper"
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v4
      - name: "🏗️ Compile paper"
        uses: xu-cheng/latex-action@v3
        with:
          working_directory: paper
          root_file: emnlp2021.tex
          name: Paper
  build-latex-talk:
    name: "🏗️ Build LaTeX talk"
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v4
      - name: "🏗️ Compile talk"
        uses: xu-cheng/latex-action@v3
        with:
          working_directory: talk
          root_file: talk.tex
  build-latex-short-talk:
    name: "🏗️ Build LaTeX short talk"
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v4
      - name: "🏗️ Compile short talk"
        uses: xu-cheng/latex-action@v3
        with:
          working_directory: talk
          root_file: short-talk.tex
  python-build:
    name: "🏗️ Build Python wheels"
    runs-on: ubuntu-latest
    steps:
    - name: "📥 Check-out"
      uses: actions/checkout@v4
    - name: "🧰 Install Python"
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: pip
        cache-dependency-path: pyproject.toml
    - name: "🧰 Install dependencies"
      run: pip install build twine
    - name: "🏗️ Build Python wheels"
      run: python -m build
    - name: "🧪 Check package bundles"
      run: twine check dist/*
  python-code-format:
    name: "🔍 Check Python code format"
    runs-on: ubuntu-latest
    steps:
    - name: "📥 Check-out"
      uses: actions/checkout@v4
    - name: "🧰 Install Python"
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: pip
        cache-dependency-path: pyproject.toml
    - name: "🧰 Install dependencies"
      run: pip install .[tests]
    - name: "🔍 Check Python code format"
      run: flake8 --exclude modern_talking/evaluation/track_1_kp_matching.py modern_talking
  python-lint:
    name: "🔍 Lint Python code"
    runs-on: ubuntu-latest
    steps:
    - name: "📥 Check-out"
      uses: actions/checkout@v4
    - name: "🧰 Install Python"
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: pip
        cache-dependency-path: pyproject.toml
    - name: "🧰 Install dependencies"
      run: pip install .[tests]
    - name: "🔍 Lint Python code"
      run: pylint -E modern_talking
  python-test:
    name: "🧪 Test Python code"
    runs-on: ubuntu-latest
    steps:
    - name: "📥 Check-out"
      uses: actions/checkout@v4
    - name: "🧰 Install Protoc"
      run: sudo apt install protobuf-compiler
    - name: "🧰 Install Python"
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: pip
        cache-dependency-path: pyproject.toml
    - name: "🧰 Install dependencies"
      run: pip install .[tests]
    - name: "🧪 Test Python code"
      run: pytest --cov --cov-report=term --cov-report=xml
    - name: "📤 Upload coverage to Codecov"
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
  docker-build:
    name: "🏗️ Build Docker image"
    runs-on: ubuntu-latest
    steps:
    - name: "📥 Check-out"
      uses: actions/checkout@v4
    - name: "🧰 Set up QEMU"
      uses: docker/setup-qemu-action@v3
    - name: "🧰 Set up Docker Buildx"
      uses: docker/setup-buildx-action@v3
    - name: "🏗️ Build Docker image"
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        cache-from: type=gha
        cache-to: type=gha,mode=max
